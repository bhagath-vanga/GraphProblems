class Solution
{
    //Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V,ArrayList<ArrayList<Integer>> adj)
    {
        // Code here
        ArrayList<Integer> bfs = new ArrayList<>();
        boolean vis[]= new boolean[V];
        for(int i=0;i<V;i++){
        if(vis[i]==false){
            Queue<Integer> q = new LinkedList<>();
            q.add(i);
            vis[i]=true;
            while(!q.isEmpty()){
                Integer node = q.poll();
                bfs.add(node);
                for(Integer it: adj.get(node)){
                    if(vis[it]==false){
                        q.add(it);
                        vis[it]=true;
                    }
                }
            }
        }
    }
        return bfs;
    }
}

Time Complexity : O(V+E)
Space Complexity : O(N) , N is the number of nodes