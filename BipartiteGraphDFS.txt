public boolean checkBipartite(int V, ArrayList<ArrayList<Integer>>adj) {
		int color[]=new int[V];
		for(int i=0;i<V;i++) {
			color[i]=-1;
		}
		for(int i=0;i<V;i++) {
			if(color[i]==-1) {
				if(BipartiteDFS(i,adj,color)!=true) return false;
			}
		}
		return true;
	}
	
	public boolean BipartiteDFS(int node, ArrayList<ArrayList<Integer>>adj,int color[]) {
		if(color[node]==-1) {
			color[node]=1;
		}
		for(Integer it : adj.get(node)) {
			if(color[it]==-1) {
				color[it]=1-color[node];
				if(BipartiteDFS(it,adj,color)==true) return true;
			}
			else if(color[it]==color[node]) return false;
		}
		return true;
	}